# Script para corrigir problemas de vers√£o do Next.js e React
# ------------------------------------------------------------------------------

Write-Host "üîÑ Iniciando corre√ß√£o de vers√µes Next.js e React..." -ForegroundColor Cyan

# Verificar se est√° rodando em ambiente Windows
if (-not $IsWindows -and -not ($PSVersionTable.PSVersion.Major -lt 6)) {
    Write-Host "‚ùå Este script foi projetado para Windows. Em outros sistemas, ajuste os comandos conforme necess√°rio." -ForegroundColor Red
    exit 1
}

# Fun√ß√£o para encerrar processos
function Stop-ProcessesByName {
    param (
        [string[]]$Names
    )
    
    foreach ($name in $Names) {
        $processes = Get-Process -Name $name -ErrorAction SilentlyContinue
        if ($processes) {
            Write-Host "üõë Encerrando processos $name..." -ForegroundColor Yellow
            Stop-Process -Name $name -Force -ErrorAction SilentlyContinue
        }
    }
}

# Encerrar processos que podem estar bloqueando arquivos
Write-Host "üîç Verificando e encerrando processos que podem estar bloqueando os arquivos..." -ForegroundColor Cyan
Stop-ProcessesByName -Names @("node", "npm")

# Remover diret√≥rio .next
if (Test-Path -Path ".next") {
    Write-Host "üóëÔ∏è Removendo diret√≥rio .next..." -ForegroundColor Yellow
    Remove-Item -Path ".next" -Recurse -Force -ErrorAction SilentlyContinue
    
    if (Test-Path -Path ".next") {
        Write-Host "‚ö†Ô∏è N√£o foi poss√≠vel remover completamente o diret√≥rio .next. Verifique se h√° processos bloqueando." -ForegroundColor Yellow
    } else {
        Write-Host "‚úÖ Diret√≥rio .next removido com sucesso." -ForegroundColor Green
    }
} else {
    Write-Host "‚ÑπÔ∏è Diret√≥rio .next n√£o encontrado. Continuando..." -ForegroundColor Gray
}

# Limpar cache do NPM
Write-Host "üßπ Limpando cache do NPM..." -ForegroundColor Cyan
npm cache clean --force

# Verificar vers√µes atuais instaladas
Write-Host "üîç Verificando vers√µes instaladas..." -ForegroundColor Cyan
$nextVersion = (npm list next --json 2>$null | ConvertFrom-Json -ErrorAction SilentlyContinue).dependencies.next.version
$reactVersion = (npm list react --json 2>$null | ConvertFrom-Json -ErrorAction SilentlyContinue).dependencies.react.version
$reactDomVersion = (npm list react-dom --json 2>$null | ConvertFrom-Json -ErrorAction SilentlyContinue).dependencies."react-dom".version

Write-Host "üì¶ Vers√µes atuais:" -ForegroundColor Cyan
Write-Host " - Next.js: $nextVersion" -ForegroundColor Gray
Write-Host " - React: $reactVersion" -ForegroundColor Gray
Write-Host " - React DOM: $reactDomVersion" -ForegroundColor Gray

# Desinstalar vers√µes atuais para limpar
Write-Host "üóëÔ∏è Desinstalando vers√µes atuais para reinstala√ß√£o limpa..." -ForegroundColor Yellow
npm uninstall next react react-dom --silent

# Instalar vers√µes compat√≠veis
Write-Host "üì¶ Instalando vers√µes compat√≠veis..." -ForegroundColor Cyan
npm install next@13.5.6 react@18.2.0 react-dom@18.2.0 --save --silent

# Verificar se a instala√ß√£o foi bem-sucedida
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Falha ao instalar as depend√™ncias. Tentando novamente com --legacy-peer-deps..." -ForegroundColor Red
    npm install next@13.5.6 react@18.2.0 react-dom@18.2.0 --save --legacy-peer-deps --silent
    
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå Falha ao instalar as depend√™ncias mesmo com --legacy-peer-deps. Verifique a conex√£o √† internet e tente novamente." -ForegroundColor Red
        exit 1
    }
}

# Verificar vers√µes instaladas ap√≥s atualiza√ß√£o
$newNextVersion = (npm list next --json 2>$null | ConvertFrom-Json -ErrorAction SilentlyContinue).dependencies.next.version
$newReactVersion = (npm list react --json 2>$null | ConvertFrom-Json -ErrorAction SilentlyContinue).dependencies.react.version
$newReactDomVersion = (npm list react-dom --json 2>$null | ConvertFrom-Json -ErrorAction SilentlyContinue).dependencies."react-dom".version

Write-Host "‚úÖ Vers√µes instaladas com sucesso:" -ForegroundColor Green
Write-Host " - Next.js: $newNextVersion" -ForegroundColor White
Write-Host " - React: $newReactVersion" -ForegroundColor White
Write-Host " - React DOM: $newReactDomVersion" -ForegroundColor White

# Limpar e recompilar
Write-Host "üîÑ Limpando e recompilando o projeto..." -ForegroundColor Cyan
npm run build

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ö†Ô∏è Ocorreram erros durante a compila√ß√£o. Verifique os erros acima e corrija-os antes de prosseguir." -ForegroundColor Yellow
} else {
    Write-Host "‚úÖ Compila√ß√£o conclu√≠da com sucesso!" -ForegroundColor Green
}

Write-Host "‚ú® Processo de corre√ß√£o de vers√µes conclu√≠do!" -ForegroundColor Cyan
Write-Host "‚ÑπÔ∏è Voc√™ pode iniciar o servidor de produ√ß√£o com o comando: npm run start" -ForegroundColor Gray 